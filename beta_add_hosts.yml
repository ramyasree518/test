- set_fact:
    o_host: []
    del_host: []
    user_data: []
    tower_host: []
    u_d1: []

- shell: 'source openrc.sh && openstack server list --project "{{outer_item}}" -c ID -c Networks -f value'
  args:
    executable: /bin/bash
  register: var

- name: variable
  set_fact:
    o_host: "{{o_host + [item]}}"
  loop: "{{var.stdout_lines}}"
  when: item.split()[1] != '{}'

- name: flitering instance id,internal ips 
  set_fact:
    user_data: "{{ user_data}} + ['{{item.split(' ')[0]}},{{item.split(':')[1].split(',')[0].replace('[', '').replace(']}', '').replace(']', '').strip().replace(\"'\",'')}},{{item.split(':')[1].split(',')[1].replace('[', '').replace(']}', '').replace(']','').strip().replace(\"'\",'')}}'] "
  loop: "{{o_host}}"
  ignore_errors: true
  when: item.split(':')[1].split(',')[1] is defined
- name: flitering instance id,internal ips with floating ips
  set_fact:
    user_data: "{{ user_data}} + ['{{item.split(' ')[0]}},{{item.split(':')[1].split(',')[0].replace('[', '').replace(']}', '').replace(']','').strip().replace(\"'\",'')}},none'] "
  loop: "{{o_host}}"
  ignore_errors: true
  when: item.split(':')[1] != " []}" and item.split(':')[1].split(',')[1] is not defined

- name: adding hosts
  shell: tower-cli host create --name "{{item.split(',')[1]}}" --inventory '{{outer_item}}'
  loop: "{{user_data}}"

- name: adding variables to hosts
  command: tower-cli host modify --name "{{item.split(',')[1]}}" --inventory {{outer_item}} --variables '{"ansible_ssh_host":"{{item.split(",")[2]}}"}'
  loop: "{{user_data}}"

- name: host list in awx for inventories
  command: tower-cli host list --inventory "{{outer_item}}"
  register: host_list
  ignore_errors: true
- name: creating list for awx hosts for particular list
  set_fact:
    tower_host: "{{tower_host}} + ['{{item.split(' ')[1]}}']"
  loop: "{{host_list.stdout_lines[3:-1]}}"
- name: list for deletimng hosts
  set_fact:
    del_host: "{{del_host}} + ['{{item.split(',')[1]}}']"
  loop: "{{user_data}}"
- name: deleting  hosts in inventories
  command:  tower-cli host delete --name "{{item}}" --inventory "{{outer_item}}"
  loop: "{{tower_host}}"
  ignore_errors: true
  when: 'item not in del_host'


- include_tasks: /var/lib/awx/projects/automate/group_beta.yml
  loop: "{{user_data}}"
  loop_control:
    loop_var: inst_details
  ignore_errors: true

