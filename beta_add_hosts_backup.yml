- set_fact:
    o_host: []
    del_host: []
    user_data: []
    tower_host: []
    u_d1: []

- shell: 'source openrc.sh && openstack server list --project "{{outer_item}}" -c Networks -f value'
  args:
    executable: /bin/bash
  register: var
- name: flitering ips
  set_fact:
    user_data: "{{user_data}} + ['{{item.split('=')[1]}}']"
  loop: "{{var.stdout_lines}}"
  ignore_errors: true
  when: item != ""


- name: spliting with comma for deleting hosts
  set_fact:
    del_host: "{{del_host}} + ['{{item.split(',')[0]}}']"
  loop: "{{user_data}}"

- name: spliting with comma
  set_fact:
    o_host: "{{o_host}} + ['{{item.split(',')[0]}},none']"
  loop: "{{user_data}}"
  ignore_errors: true
  when: item.split(',')[1] is not defined

- name: spliting with comma
  set_fact:
    o_host: "{{o_host}} + ['{{item.split(',')[0]}},{{item.split(',')[1]}}']"
  loop: "{{user_data}}"
  when: item.split(',')[1] is defined

- name: hosts 
  set_fact:
    u_d1: "{{u_d1}} + ['{{item.replace(' ', '')}}']"
  loop: "{{o_host}}"

- name: adding hosts
  shell: tower-cli host create --name "{{item.split(',')[0]}}" --inventory '{{outer_item}}'
  loop: "{{u_d1}}"

- name: adding hosts
  command: tower-cli host modify --name "{{item.split(',')[0]}}" --inventory {{outer_item}} --variables '{"ansible_ssh_host":"{{item.split(",")[1]}}"}'
  loop: "{{u_d1}}"

- name: host list in awx for inventories
  command: tower-cli host list --inventory "{{outer_item}}"
  register: host_list

- name: creating list for awx hosts for particular list
  set_fact:
    tower_host: "{{tower_host}} + ['{{item.split(' ')[1]}}']"
  loop: "{{host_list.stdout_lines[3:-1]}}"

- name: deleting  hosts in inventories
  command:  tower-cli host delete --name "{{item}}" --inventory "{{outer_item}}"
  loop: "{{tower_host}}"
  when: 'item not in del_host'
